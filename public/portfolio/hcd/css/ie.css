body {
	background-image: url('../images/backdrop.jpg');
	background-repeat: repeat;
}
img {
	border: 0px;
}
* {vertical-align: text-top;}
#wrapper {
	width: 1000px;
	margin-left: auto;
	margin-right: auto;
}
#logo {
	background-image: url('../images/logo_blank.gif');
	background-repeat: none;
}
#left {
	background-image: url('../images/left_grad.jpg');
	background-repeat: repeat-x;
	height: 450px;
	vertical-align: middle;
	width: 170px;
}
.top_spacer {
	height: 0px;
}
#content {
	background: #FFFFFF;
}
.nav1 {
	width: 157px;
	height: 25px;
	background-color: #16B3EA;
}
.nav2 {
	width: 157px;
	height: 30px;
	background-color: #FFFFFF;
	vertical-align: middle;
}
.nav2 a:link, .nav2 a:visited{
	color: #16B3EA;
	text-decoration: none;
}
.nav2-hover {
	width: 157px;
	height: 30px;
	background-color: #DDDDDD;
	vertical-align: middle;
}
.nav2-hover a:link, .nav2-hover a:visited{
	color: #000000;
	text-decoration: none;
}
.table {
	border: 0px;
	border-collapse: collapse;
}
.input1{
	width: 90%
}
.input2 {
	width: 130px;
}
* html img,
* html .png{
position:relative;
behavior: expression((this.runtimeStyle.behavior="none")&&(this.pngSet?this.pngSet=true:(this.nodeName == "IMG" && this.src.toLowerCase().indexOf('.png')>-1?(this.runtimeStyle.backgroundImage = "none",
this.runtimeStyle.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='" + this.src + "', sizingMethod='image')",
this.src = "images/blank.gif"):(this.origBg = this.origBg? this.origBg :this.currentStyle.backgroundImage.toString().replace('url("','').replace('")',''),
this.runtimeStyle.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='" + this.origBg + "', sizingMethod='crop')",
this.runtimeStyle.backgroundImage = "none")),this.pngSet=true)
);
}